% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query-result.R
\name{EsgfQueryResultDataset}
\alias{EsgfQueryResultDataset}
\title{ESGF Query results for \code{Dataset} type}
\description{
\code{EsgfQueryResultDataset} is a class that represents query results for
\code{Dataset} type from ESGF search RESTful API.

In general, there is no need to create an \code{EsgfQueryResultDataset} manually.
Usually, it is created by calling
\href{#method-EsgfQuery-collect}{\code{EsgfQuery$collect()}}.
}
\author{
Hongyuan Jia
}
\section{Super class}{
\code{\link[epwshiftr:EsgfQueryResult]{epwshiftr::EsgfQueryResult}} -> \code{EsgfQueryResultDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EsgfQueryResultDataset-to_dt}{\code{EsgfQueryResultDataset$to_dt()}}
\item \href{#method-EsgfQueryResultDataset-has_opendap}{\code{EsgfQueryResultDataset$has_opendap()}}
\item \href{#method-EsgfQueryResultDataset-has_download}{\code{EsgfQueryResultDataset$has_download()}}
\item \href{#method-EsgfQueryResultDataset-collect}{\code{EsgfQueryResultDataset$collect()}}
\item \href{#method-EsgfQueryResultDataset-print}{\code{EsgfQueryResultDataset$print()}}
\item \href{#method-EsgfQueryResultDataset-clone}{\code{EsgfQueryResultDataset$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="epwshiftr" data-topic="EsgfQueryResult" data-id="count"><a href='../../epwshiftr/html/EsgfQueryResult.html#method-EsgfQueryResult-count'><code>epwshiftr::EsgfQueryResult$count()</code></a></span></li>
<li><span class="pkg-link" data-pkg="epwshiftr" data-topic="EsgfQueryResult" data-id="initialize"><a href='../../epwshiftr/html/EsgfQueryResult.html#method-EsgfQueryResult-initialize'><code>epwshiftr::EsgfQueryResult$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-to_dt"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-to_dt}{}}}
\subsection{Method \code{to_dt()}}{
Convert the results into a \link[data.table:data.table]{data.table}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$to_dt(fields = NULL, formatted = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fields}}{A character vector indicating the fields to put into
the \code{data.table}. If \code{NULL}, all fields in the query result
will be used. Default: \code{NULL}.}

\item{\code{formatted}}{Whether to use formatted values for special fields,
including \code{url} and \code{size}. Default: \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link[data.table:data.table]{data.table}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-has_opendap"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-has_opendap}{}}}
\subsection{Method \code{has_opendap()}}{
Check if there are OPeNDAP support for the datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$has_opendap()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A logical vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-has_download"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-has_download}{}}}
\subsection{Method \code{has_download()}}{
Check if there are HTTPServer download URL for the datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$has_download()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A logical vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-collect"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-collect}{}}}
\subsection{Method \code{collect()}}{
Collect file or aggregation information for current datasets

\verb{$collect()} sends a query with \strong{\code{type=File}} or
**\code{type=aggregation} (based on the specified \code{type}) for current
datasets and returns an
\link{EsgfQueryResultFile} or
\link{EsgfQueryResultAggregation} object, respectively.

The following fields are always included in the results:
\itemize{
\item For \code{File} query: \verb{checksum}, \verb{checksum_type}, \verb{data_node}, \verb{dataset_id}, \verb{id}, \verb{size}, \verb{title}, \verb{tracking_id}, \verb{url}.
\item For \code{Aggregation} query: \verb{data_node}, \verb{dataset_id}, \verb{id}, \verb{size}, \verb{title}, \verb{url}.
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$collect(
  which = NULL,
  fields = NULL,
  all = FALSE,
  limit = 100L,
  type = "File",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which}}{A character vector giving the value of dataset ID or an
integer vector giving the indices of the dataset. If \code{NULL},
all datasets will be sent. Default: \code{NULL}.}

\item{\code{fields}}{A character vector indicating the value of \code{fields}
parameter when sending the query. If \code{NULL}, all available
fields will be included. Default: \code{NULL}.}

\item{\code{all}}{A flag. Whether to collect all results. Default: \code{FALSE}.}

\item{\code{limit}}{A positive integer indicating the number of records to
fetch per query. If \code{NULL}, the allowed maximum limit number
10000 is used. Default: \code{100L}.}

\item{\code{type}}{A string indicating the query type. Should be one of
\code{File} or \code{Aggregation}. Default: \code{"File"}.}

\item{\code{...}}{Other parameters to set. Currently, there are 4 parameters
supported, including \code{replica}, \code{distrib}, \code{latest}, \code{shards}.
For details on possible parameters, please see \code{\link[=query_esgf]{query_esgf()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\itemize{
\item If \code{type="File"}, an \link{EsgfQueryResultFile} object
\item If \code{type="Aggregation"}, an \link{EsgfQueryResultAggregation} object
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-print"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-print}{}}}
\subsection{Method \code{print()}}{
Print a summary of the current dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$print(n = 10L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{An integer indicating how many items to print. If \code{NULL},
all items will be printed. Default: \code{10L}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{EsgfQueryResultDataset} object itself, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EsgfQueryResultDataset-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EsgfQueryResultDataset-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EsgfQueryResultDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
